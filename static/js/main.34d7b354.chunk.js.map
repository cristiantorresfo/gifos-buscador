{"version":3,"sources":["Context/GifContext.jsx","components/Busqueda/Busqueda.jsx","components/Header/Header.jsx","components/Resultados/Trending/Trending.jsx","components/Resultados/GifCard/GifCard.jsx","components/Resultados/NotFound/NotFound.jsx","components/Resultados/Resultados.jsx","App.jsx","index.js"],"names":["GifContext","createContext","GifProvider","children","mostrarAutocomplete","setAutocomplete","useState","gifBuscado","setGifBuscado","sugerencias","setSugerencias","gifSeleccionado","setGifSeleccionado","buscar","setBuscar","resultados","setResultados","isNotFound","setIsNotFound","isDarkMode","setDarkMode","trending","setTrending","useEffect","fetch","then","res","json","data","catch","error","alert","length","respuesta","Provider","value","handlerClickBuscar","e","target","innerText","handlerClickBtn","preventDefault","Busqueda","useContext","className","src","alt","onSubmit","type","placeholder","onChange","BsSearch","map","sugerencia","i","onClick","AiOutlineSearch","name","Header","Trending","gif","href","url","images","downsized_medium","id","GifCard","NotFound","Resultados","align","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"mMAEO,MAAMA,EAAaC,0BAEbC,EAAc,IAAmB,IAAlB,SAAEC,GAAe,EAC3C,MAAOC,EAAqBC,GAAmBC,oBAAS,IACjDC,EAAYC,GAAiBF,mBAAS,KACtCG,EAAaC,GAAkBJ,mBAAS,KACxCK,EAAiBC,GAAsBN,mBAAS,KAChDO,EAAQC,GAAaR,oBAAS,IAC9BS,EAAYC,GAAiBV,mBAAS,KACtCW,EAAYC,GAAiBZ,oBAAS,IACtCa,EAAYC,GAAed,oBAAS,IACpCe,EAAUC,GAAehB,mBAAS,IAEzCiB,qBAAU,KACOC,MACb,qGAGCC,MAAMC,GACEA,EAAIC,SAEZF,MAAMG,IACLN,EAAYM,EAAKA,SAElBC,OAAOC,IACNC,MAAMD,QAET,IAEHP,qBAAU,KACJhB,EAAWyB,OAAS,EACtB3B,GAAgB,GAEhBA,GAAgB,GAGHmB,MAAM,qDAAD,OADP,mCACO,cAC+CjB,IAGhEkB,MAAMQ,GACEA,EAAUN,SAElBF,MAAMC,IACLhB,EAAegB,EAAIE,SAEpBC,OAAOC,IACNC,MAAMD,QAET,CAACvB,IAEJgB,qBAAU,KACR,GAAIV,EAAQ,CAEKW,MAAM,gDAAD,OADP,mCACO,cAC0Cb,EAD1C,wCAIjBc,MAAMC,GACEA,EAAIC,SAEZF,MAAMC,IACLV,EAAcU,EAAIE,MAEM,IAApBF,EAAIE,KAAKI,QACXd,GAAc,GAEhBJ,GAAU,MAEXe,OAAOC,IACNC,MAAMD,SAGX,CAACjB,EAAQF,IAeZ,OACE,cAACX,EAAWkC,SAAZ,CACEC,MAAO,CACL/B,sBACAK,cACAD,gBACAD,aACAI,kBACAE,SACAE,aACAqB,mBAvBsBC,IAC1BvB,GAAU,GACVF,EAAmByB,EAAEC,OAAOC,WAC5BlC,GAAgB,IAqBZmC,gBAlBmBH,IACvBA,EAAEI,iBACF3B,GAAU,GACVF,EAAmBL,GACnBF,GAAgB,IAeZY,aACAE,aACAC,cACAC,YAdJ,SAiBGlB,KCvDQuC,MAhDf,WACE,MAAM,oBACJtC,EADI,WAEJG,EAFI,cAGJC,EAHI,YAIJC,EAJI,mBAKJ2B,EALI,gBAMJI,GACEG,qBAAW3C,GAEf,OACE,sBAAK4C,UAAU,WAAf,UACE,qEAEE,+CAEF,qBAAKC,IAAI,8BAA8BC,IAAI,oBAC3C,sBAAMC,SAAUP,EAAhB,SACE,sBAAKI,UAAU,gBAAf,UACE,uBACEA,UAAWxC,EAAsB,UAAY,gBAC7C4C,KAAK,OACLb,MAAO5B,EACP0C,YAAY,aACZC,SAAWb,IACT7B,EAAc6B,EAAEC,OAAOH,UAG3B,wBAAQS,UAAWxC,EAAsB,QAAU,cAAnD,SACE,cAAC+C,EAAA,SAAD,WAIL/C,EACC,qBAAKwC,UAAU,eAAf,SACGnC,EAAY2C,KAAI,CAACC,EAAWC,IAEzB,oBAAWC,QAASnB,EAApB,UACG,IACD,cAACoB,EAAA,gBAAD,IAFF,IAEuBH,EAAWI,OAF1BH,OAOZ,SC3BKI,MAnBf,WACE,MAAM,WAAEvC,EAAF,YAAcC,GAAgBuB,qBAAW3C,GAK/C,OACE,sBAAK4C,UAAU,SAAf,UACGzB,EACC,qBAAK0B,IAAI,qCAAqCC,IAAI,cAElD,qBAAKD,IAAI,4BAA4BC,IAAI,eAE3C,wBAAQF,UAAU,WAAWW,QAVP,KACxBnC,GAAaD,IASX,SACGA,EAAa,aAAe,kBCOtBwC,MArBf,WACE,MAAM,SAAEtC,GAAasB,qBAAW3C,GAChC,OACE,sBAAK4C,UAAU,UAAf,UACE,+CACA,8BACGvB,EAAS+B,KAAKQ,GAEX,mBAAGC,KAAMD,EAAIE,IAAb,SACE,qBACElB,UAAU,SACVC,IAAKe,EAAIG,OAAOC,iBAAiBF,IACjChB,IAAI,SAJec,EAAIK,YCcxBC,MAtBf,WACE,MAAM,WAAEnD,GAAe4B,qBAAW3C,GAElC,OACE,sBAAK4C,UAAU,UAAf,UACE,8DACA,8BACG7B,EAAWqC,KAAKQ,GAEb,mBAAGC,KAAMD,EAAIE,IAAb,SACE,qBACElB,UAAU,SACVC,IAAKe,EAAIG,OAAOC,iBAAiBF,IACjChB,IAAI,SAJec,EAAIK,YCDxBE,MAXf,WACE,OACE,qBAAKvB,UAAU,YAAf,SACE,qBACEC,IAAI,uEACJC,IAAI,qBCqBGsB,MApBf,WACE,MAAM,WAAErD,EAAF,OAAcF,EAAd,WAAsBI,EAAtB,SAAkCI,GAAasB,qBAAW3C,GAEhE,OACE,sBAAK4C,UAAU,aAAf,UACG/B,EACC,qBAAK+B,UAAU,2BAA2ByB,MAAM,SAAhD,SACE,qBAAKzB,UAAU,eAEf,KACH3B,GAAoC,IAAtBF,EAAWiB,OACxB,cAAC,EAAD,IACwB,IAAtBjB,EAAWiB,QAAgBX,EAASW,OAAS,EAC/C,cAAC,EAAD,IAEA,cAAC,EAAD,Q,MCbO,SAASsC,IACtB,MAAM,WAAEnD,GAAewB,qBAAW3C,GAElC,OACE,sBAAK4C,UAAS,cAASzB,EAAa,OAAS,IAA7C,UAIE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,OCZN,MAAMoD,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACzE,EAAD,UACE,cAACoE,EAAD,QAGJC,K","file":"static/js/main.34d7b354.chunk.js","sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const GifContext = createContext();\r\n\r\nexport const GifProvider = ({ children }) => {\r\n  const [mostrarAutocomplete, setAutocomplete] = useState(false);\r\n  const [gifBuscado, setGifBuscado] = useState(\"\");\r\n  const [sugerencias, setSugerencias] = useState([]);\r\n  const [gifSeleccionado, setGifSeleccionado] = useState(\"\");\r\n  const [buscar, setBuscar] = useState(false);\r\n  const [resultados, setResultados] = useState([]);\r\n  const [isNotFound, setIsNotFound] = useState(false);\r\n  const [isDarkMode, setDarkMode] = useState(false);\r\n  const [trending, setTrending] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let peticion = fetch(\r\n      \"https://api.giphy.com/v1/gifs/trending?api_key=Tj909oxjpe7pghhfRK3XdH3V3RTHKYnG&limit=15&rating=g\"\r\n    );\r\n    peticion\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setTrending(data.data);\r\n      })\r\n      .catch((error) => {\r\n        alert(error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (gifBuscado.length > 2) {\r\n      setAutocomplete(true);\r\n    } else {\r\n      setAutocomplete(false);\r\n    }\r\n    let apiKey = \"Tj909oxjpe7pghhfRK3XdH3V3RTHKYnG\";\r\n    let peticion = fetch(\r\n      `https://api.giphy.com/v1/gifs/search/tags?api_key=${apiKey}&q=${gifBuscado}`\r\n    );\r\n    peticion\r\n      .then((respuesta) => {\r\n        return respuesta.json();\r\n      })\r\n      .then((res) => {\r\n        setSugerencias(res.data);\r\n      })\r\n      .catch((error) => {\r\n        alert(error);\r\n      });\r\n  }, [gifBuscado]);\r\n\r\n  useEffect(() => {\r\n    if (buscar) {\r\n      let apiKey = \"Tj909oxjpe7pghhfRK3XdH3V3RTHKYnG\";\r\n      let peticion = fetch(\r\n        `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${gifSeleccionado}&limit=15&offset=0&rating=g&lang=en`\r\n      );\r\n      peticion\r\n        .then((res) => {\r\n          return res.json();\r\n        })\r\n        .then((res) => {\r\n          setResultados(res.data);\r\n\r\n          if (res.data.length === 0) {\r\n            setIsNotFound(true);\r\n          }\r\n          setBuscar(false);\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    }\r\n  }, [buscar, gifSeleccionado]);\r\n\r\n  const handlerClickBuscar = (e) => {\r\n    setBuscar(true);\r\n    setGifSeleccionado(e.target.innerText);\r\n    setAutocomplete(false);\r\n  };\r\n\r\n  const handlerClickBtn = (e) => {\r\n    e.preventDefault();\r\n    setBuscar(true);\r\n    setGifSeleccionado(gifBuscado);\r\n    setAutocomplete(false);\r\n  };\r\n\r\n  return (\r\n    <GifContext.Provider\r\n      value={{\r\n        mostrarAutocomplete,\r\n        sugerencias,\r\n        setGifBuscado,\r\n        gifBuscado,\r\n        gifSeleccionado,\r\n        buscar,\r\n        resultados,\r\n        handlerClickBuscar,\r\n        handlerClickBtn,\r\n        isNotFound,\r\n        isDarkMode,\r\n        setDarkMode,\r\n        trending\r\n      }}\r\n    >\r\n      {children}\r\n    </GifContext.Provider>\r\n  );\r\n};\r\n","import { AiOutlineSearch } from \"@react-icons/all-files/ai/AiOutlineSearch\";\r\nimport { BsSearch } from \"@react-icons/all-files/bs/BsSearch\";\r\nimport { useContext } from \"react\";\r\nimport { GifContext } from \"../../Context/GifContext\";\r\n\r\nfunction Busqueda() {\r\n  const {\r\n    mostrarAutocomplete,\r\n    gifBuscado,\r\n    setGifBuscado,\r\n    sugerencias,\r\n    handlerClickBuscar,\r\n    handlerClickBtn\r\n  } = useContext(GifContext);\r\n\r\n  return (\r\n    <div className=\"busqueda\">\r\n      <p>\r\n        ¡Inspírate y busca los mejores\r\n        <strong> GIFS!</strong>\r\n      </p>\r\n      <img src=\"./images/ilustra_header.svg\" alt=\"cabecera_imagen\" />\r\n      <form onSubmit={handlerClickBtn}>\r\n        <div className=\"barraBusqueda\">\r\n          <input\r\n            className={mostrarAutocomplete ? \"inputAC\" : \"inputBusqueda\"}\r\n            type=\"text\"\r\n            value={gifBuscado}\r\n            placeholder=\"Buscar Gif\"\r\n            onChange={(e) => {\r\n              setGifBuscado(e.target.value);\r\n            }}\r\n          />\r\n          <button className={mostrarAutocomplete ? \"btnAC\" : \"btnBusqueda\"}>\r\n            <BsSearch />\r\n          </button>\r\n        </div>\r\n      </form>\r\n      {mostrarAutocomplete ? (\r\n        <div className=\"autocomplete\">\r\n          {sugerencias.map((sugerencia,i) => {\r\n            return (\r\n              <p key={i} onClick={handlerClickBuscar}>\r\n                {\" \"}\r\n                <AiOutlineSearch /> {sugerencia.name}\r\n              </p>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\nexport default Busqueda;\r\n","import { useContext } from \"react\";\r\nimport { GifContext } from \"../../Context/GifContext\";\r\n\r\nfunction Header() {\r\n  const { isDarkMode, setDarkMode } = useContext(GifContext);\r\n\r\n  const handleChangeTheme = () => {\r\n    setDarkMode(!isDarkMode);\r\n  };\r\n  return (\r\n    <div className=\"header\">\r\n      {isDarkMode ? (\r\n        <img src=\"./images/logo-mobile-modo-noct.svg\" alt=\"logo-dark\" />\r\n      ) : (\r\n        <img src=\"./images/logo-desktop.svg\" alt=\"logo.light\" />\r\n      )}\r\n      <button className=\"btnTheme\" onClick={handleChangeTheme}>\r\n        {isDarkMode ? \"MODO LIGHT\" : \"MODO DARK\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nexport default Header;\r\n","import { useContext } from \"react\";\r\nimport { GifContext } from \"../../../Context/GifContext\";\r\n\r\nfunction Trending() {\r\n  const { trending } = useContext(GifContext);\r\n  return (\r\n    <div className=\"gifCard\">\r\n      <h3>Trending Gifs</h3>\r\n      <div>\r\n        {trending.map((gif) => {\r\n          return (\r\n            <a href={gif.url} key={gif.id}>\r\n              <img\r\n                className=\"gifImg\"\r\n                src={gif.images.downsized_medium.url}\r\n                alt=\"gif\"\r\n              />\r\n            </a>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Trending;\r\n","import { useContext } from \"react\";\r\nimport { GifContext } from \"../../../Context/GifContext\";\r\n\r\nfunction GifCard() {\r\n  const { resultados } = useContext(GifContext);\r\n\r\n  return (\r\n    <div className=\"gifCard\">\r\n      <h3>Resultados de tu búsqueda</h3>\r\n      <div>\r\n        {resultados.map((gif) => {\r\n          return (\r\n            <a href={gif.url} key={gif.id}>\r\n              <img\r\n                className=\"gifImg\"\r\n                src={gif.images.downsized_medium.url}\r\n                alt=\"gif\"\r\n              />\r\n            </a>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default GifCard;\r\n","function NotFound() {\r\n  return (\r\n    <div className=\"notFound \">\r\n      <img\r\n        src=\"https://www.123dreamit.com/static/new_dream/img/no-resultados_sm.png\"\r\n        alt=\"No Resultados\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import { useContext } from \"react\";\r\nimport { GifContext } from \"../../Context/GifContext\";\r\nimport Trending from \"./Trending/Trending\";\r\nimport GifCard from \"./GifCard/GifCard\";\r\nimport NotFound from \"./NotFound/NotFound\";\r\n\r\nfunction Resultados() {\r\n  const { resultados, buscar, isNotFound, trending } = useContext(GifContext);\r\n\r\n  return (\r\n    <div className=\"resultados\">\r\n      {buscar ? (\r\n        <div className=\"conteneur_general_load_9\" align=\"center\">\r\n          <div className=\"loader_9\"></div>\r\n        </div>\r\n      ) : null}\r\n      {isNotFound && resultados.length === 0 ? (\r\n        <NotFound />\r\n      ) : resultados.length === 0 && trending.length > 0 ? (\r\n        <Trending />\r\n      ) : (\r\n        <GifCard />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default Resultados;\r\n","import { useContext } from \"react\";\nimport Busqueda from \"./components/Busqueda/Busqueda\";\nimport Header from \"./components/Header/Header\";\nimport Resultados from \"./components/Resultados/Resultados\";\nimport { GifContext } from \"./Context/GifContext\";\n\nimport \"./styles.css\";\n\nexport default function App() {\n  const { isDarkMode } = useContext(GifContext);\n\n  return (\n    <div className={`App ${isDarkMode ? \"dark\" : \"\"}`}>\n      {/* {isDarkMode\n        ? document.body.classList.add(\"dark\")\n        : document.body.classList.remove(\"dark\")} */}\n      <Header />\n      <Busqueda />\n      <Resultados />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport { GifProvider } from \"./Context/GifContext\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <GifProvider>\n      <App />\n    </GifProvider>\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}